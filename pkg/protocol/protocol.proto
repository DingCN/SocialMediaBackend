syntax = "proto3";
package protocol;

// import "google/protobuf/timestamp.proto";


// option go_package = "github.com/golang/protobuf/ptypes/any";
service TwitterRPC{
    rpc SignupRPC (SignupRequest) returns (SignupReply){}
    rpc LoginRPC (LoginRequest) returns (LoginReply){}

    rpc FollowUnFollowRPC (FollowUnFollowRequest) returns (FollowUnFollowReply){}
    rpc AddTweetRPC (AddTweetRequest) returns (AddTweetReply){}
    rpc GetFollowingTweetsRPC (GetFollowingTweetsRequest) returns (GetFollowingTweetsReply){}
    rpc GetUserProfileRPC (GetUserProfileRequest) returns (GetUserProfileReply){}
    rpc MomentRandomFeedsRPC (MomentRandomFeedsRequest) returns (MomentRandomFeedsReply){}
}

message SignupRequest{
    string username = 1;
    string password = 2;
}
message SignupReply{
    string username = 1;
    bool success = 2;
}

message LoginRequest{
    string username = 1;
    string password = 2;
}
message LoginReply{
    string username = 1;
    bool success = 2;
}

message FollowUnFollowRequest{
    string username = 1;
    string targetname = 2;
}
message FollowUnFollowReply{
    string username = 1;
    string targetname = 2;
    bool success = 3;
}

message AddTweetRequest{
    string username = 1;
    string post = 2;
}
message AddTweetReply{
    string username = 1;
    bool success = 2;
}

// message GetRandomTweetRequest{
//     string username = 1;
//     string password = 2;
// }
// message GetRandomTweetReply{
//     string username = 1;
//     bool success = 2;
// }

message GetFollowingTweetsRequest{
    string username = 1;
}
message GetFollowingTweetsReply{
    string username = 1;
    repeated Tweet tweet = 2;
    bool success = 3;
}
message Tweet{
    string UserName = 1;
    Timestamp Timestamp = 2;
	string Body = 3;
}
message Timestamp {
    // Represents seconds of UTC time since Unix epoch
    // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
    // 9999-12-31T23:59:59Z inclusive.
    int64 seconds = 1;
  
    // Non-negative fractions of a second at nanosecond resolution. Negative
    // second values with fractions must still have non-negative nanos values
    // that count forward in time. Must be from 0 to 999,999,999
    // inclusive.
    int32 nanos = 2;
  }

message GetUserProfileRequest{
    string username = 1;
}
message GetUserProfileReply{
    string username = 1;
    repeated Tweet tweetList = 2;
    repeated string followingList = 3;
    repeated string followerList = 4; 
    bool success = 5;
}

message MomentRandomFeedsRequest{
}
message MomentRandomFeedsReply{
    repeated Tweet tweetList = 1;
    bool success = 2;
}